package com.alpha.tpcsfashion.util;

import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Document;
import com.itextpdf.text.Element;
import com.itextpdf.text.Font;
import com.itextpdf.text.FontFactory;
import com.itextpdf.text.Phrase;
import com.itextpdf.text.pdf.ColumnText;
import com.itextpdf.text.pdf.PdfPageEventHelper;
import com.itextpdf.text.pdf.PdfWriter;

public class HeaderFooterPageEvent extends PdfPageEventHelper {

    public void onStartPage(PdfWriter writer, Document document) {
//        ColumnText.showTextAligned(writer.getDirectContent(), Element.ALIGN_CENTER, new Phrase("Top Left"), 100, 800, 0);
//        ColumnText.showTextAligned(writer.getDirectContent(), Element.ALIGN_CENTER, new Phrase("Top Right"), 400, 800, 0);
    }

    public void onEndPage(PdfWriter writer, Document document) {
    	
//    	PdfContentByte canvas = writer.getDirectContent();
////    	Rectangle layout = new Rectangle(36, 48, 559, 806); //559
//    	Rectangle layout = new Rectangle(30, 40, 565, 800); //559
////	    layout.setBackgroundColor(new BaseColor(100, 200, 180)); //Background color
//	    layout.setBorderColor(BaseColor.BLACK);  //Border color
//	    layout.setBorderWidth(1);      //Border width  
//	    layout.setBorder(Rectangle.BOX);  //Border on 4 sides
//	    canvas.rectangle(layout);
    	
//    	Calendar currentDate = Calendar.getInstance();
//		SimpleDateFormat formatter = new SimpleDateFormat("dd-MMM-yyyy hh:mm aa");
//		String dateNow = formatter.format(currentDate.getTime());
//		
		BaseColor baseColor=new BaseColor(0,0,0);
		Font addFont= FontFactory.getFont("Calibri",8,Font.NORMAL, baseColor);
//		
//		SimpleDateFormat dateFormatGmt = new SimpleDateFormat("dd-MMM-yyyy hh:mm aa");
//		dateFormatGmt.setTimeZone(TimeZone.getTimeZone("GMT"));
//
//		//Local time zone   
//		SimpleDateFormat dateFormatLocal = new SimpleDateFormat("dd-MMM-yyyy hh:mm aa");
//		Date date=new Date(); 
//		//Time in GMT
////		dateFormatLocal.parse( dateFormatGmt.format(new Date()) );
//		try {
//			 date= dateFormatLocal.parse(dateFormatGmt.format(new Date()) );
//			
//		} catch (ParseException e) {
//			e.printStackTrace();
//		}
		
        ColumnText.showTextAligned(writer.getDirectContent(), Element.ALIGN_LEFT, new Phrase("Date : "+String.valueOf(new java.util.Date()),addFont), 40, 25, 0);
        ColumnText.showTextAligned(writer.getDirectContent(), Element.ALIGN_CENTER, new Phrase("Page " + document.getPageNumber(),addFont), 300, 25, 0);
        ColumnText.showTextAligned(writer.getDirectContent(), Element.ALIGN_RIGHT, new Phrase("Report Generated By Jenixbooks",addFont), 550, 25, 0);
//        
        //to draw outline border
//        PdfContentByte canvas = writer.getDirectContent();
//        Rectangle rect = document.getPageSize();
//        rect.setBorder(Rectangle.BOX); // left, right, top, bottom borders
//        rect.setBorderWidth(5); // a width of 5 user units
//        rect.setBorderColor(BaseColor.RED); // a red border
//        rect.setUseVariableBorders(true); // the full width will be visible
//        canvas.rectangle(rect);
   
    }

}